/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudera.services.hbase;  
@SuppressWarnings("all")
/** Schema generated by Kite */
@org.apache.avro.specific.AvroGenerated
public class PWData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PWData\",\"namespace\":\"com.cloudera.services.hbase\",\"doc\":\"Schema generated by Kite\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '35218'\",\"default\":null},{\"name\":\"col1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '195'\",\"default\":null},{\"name\":\"cl2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'Alabama Power Co'\",\"default\":null},{\"name\":\"col3\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'AL'\",\"default\":null},{\"name\":\"col4\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'Bundled'\",\"default\":null},{\"name\":\"col5\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from 'Investor Owned'\",\"default\":null},{\"name\":\"col6\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0.105761195393'\",\"default\":null},{\"name\":\"col7\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0.0602924366735'\",\"default\":null},{\"name\":\"col8\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"Type inferred from '0.114943267065'\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Type inferred from '35218' */
   private java.lang.String id;
  /** Type inferred from '195' */
   private java.lang.String col1;
  /** Type inferred from 'Alabama Power Co' */
   private java.lang.String cl2;
  /** Type inferred from 'AL' */
   private java.lang.String col3;
  /** Type inferred from 'Bundled' */
   private java.lang.String col4;
  /** Type inferred from 'Investor Owned' */
   private java.lang.String col5;
  /** Type inferred from '0.105761195393' */
   private java.lang.String col6;
  /** Type inferred from '0.0602924366735' */
   private java.lang.String col7;
  /** Type inferred from '0.114943267065' */
   private java.lang.String col8;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PWData() {}

  /**
   * All-args constructor.
   */
  public PWData(java.lang.String id, java.lang.String col1, java.lang.String cl2, java.lang.String col3, java.lang.String col4, java.lang.String col5, java.lang.String col6, java.lang.String col7, java.lang.String col8) {
    this.id = id;
    this.col1 = col1;
    this.cl2 = cl2;
    this.col3 = col3;
    this.col4 = col4;
    this.col5 = col5;
    this.col6 = col6;
    this.col7 = col7;
    this.col8 = col8;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return col1;
    case 2: return cl2;
    case 3: return col3;
    case 4: return col4;
    case 5: return col5;
    case 6: return col6;
    case 7: return col7;
    case 8: return col8;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.String)value$; break;
    case 1: col1 = (java.lang.String)value$; break;
    case 2: cl2 = (java.lang.String)value$; break;
    case 3: col3 = (java.lang.String)value$; break;
    case 4: col4 = (java.lang.String)value$; break;
    case 5: col5 = (java.lang.String)value$; break;
    case 6: col6 = (java.lang.String)value$; break;
    case 7: col7 = (java.lang.String)value$; break;
    case 8: col8 = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * Type inferred from '35218'   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * Type inferred from '35218'   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'col1' field.
   * Type inferred from '195'   */
  public java.lang.String getCol1() {
    return col1;
  }

  /**
   * Sets the value of the 'col1' field.
   * Type inferred from '195'   * @param value the value to set.
   */
  public void setCol1(java.lang.String value) {
    this.col1 = value;
  }

  /**
   * Gets the value of the 'cl2' field.
   * Type inferred from 'Alabama Power Co'   */
  public java.lang.String getCl2() {
    return cl2;
  }

  /**
   * Sets the value of the 'cl2' field.
   * Type inferred from 'Alabama Power Co'   * @param value the value to set.
   */
  public void setCl2(java.lang.String value) {
    this.cl2 = value;
  }

  /**
   * Gets the value of the 'col3' field.
   * Type inferred from 'AL'   */
  public java.lang.String getCol3() {
    return col3;
  }

  /**
   * Sets the value of the 'col3' field.
   * Type inferred from 'AL'   * @param value the value to set.
   */
  public void setCol3(java.lang.String value) {
    this.col3 = value;
  }

  /**
   * Gets the value of the 'col4' field.
   * Type inferred from 'Bundled'   */
  public java.lang.String getCol4() {
    return col4;
  }

  /**
   * Sets the value of the 'col4' field.
   * Type inferred from 'Bundled'   * @param value the value to set.
   */
  public void setCol4(java.lang.String value) {
    this.col4 = value;
  }

  /**
   * Gets the value of the 'col5' field.
   * Type inferred from 'Investor Owned'   */
  public java.lang.String getCol5() {
    return col5;
  }

  /**
   * Sets the value of the 'col5' field.
   * Type inferred from 'Investor Owned'   * @param value the value to set.
   */
  public void setCol5(java.lang.String value) {
    this.col5 = value;
  }

  /**
   * Gets the value of the 'col6' field.
   * Type inferred from '0.105761195393'   */
  public java.lang.String getCol6() {
    return col6;
  }

  /**
   * Sets the value of the 'col6' field.
   * Type inferred from '0.105761195393'   * @param value the value to set.
   */
  public void setCol6(java.lang.String value) {
    this.col6 = value;
  }

  /**
   * Gets the value of the 'col7' field.
   * Type inferred from '0.0602924366735'   */
  public java.lang.String getCol7() {
    return col7;
  }

  /**
   * Sets the value of the 'col7' field.
   * Type inferred from '0.0602924366735'   * @param value the value to set.
   */
  public void setCol7(java.lang.String value) {
    this.col7 = value;
  }

  /**
   * Gets the value of the 'col8' field.
   * Type inferred from '0.114943267065'   */
  public java.lang.String getCol8() {
    return col8;
  }

  /**
   * Sets the value of the 'col8' field.
   * Type inferred from '0.114943267065'   * @param value the value to set.
   */
  public void setCol8(java.lang.String value) {
    this.col8 = value;
  }

  /** Creates a new PWData RecordBuilder */
  public static com.cloudera.services.hbase.PWData.Builder newBuilder() {
    return new com.cloudera.services.hbase.PWData.Builder();
  }
  
  /** Creates a new PWData RecordBuilder by copying an existing Builder */
  public static com.cloudera.services.hbase.PWData.Builder newBuilder(com.cloudera.services.hbase.PWData.Builder other) {
    return new com.cloudera.services.hbase.PWData.Builder(other);
  }
  
  /** Creates a new PWData RecordBuilder by copying an existing PWData instance */
  public static com.cloudera.services.hbase.PWData.Builder newBuilder(com.cloudera.services.hbase.PWData other) {
    return new com.cloudera.services.hbase.PWData.Builder(other);
  }
  
  /**
   * RecordBuilder for PWData instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PWData>
    implements org.apache.avro.data.RecordBuilder<PWData> {

    private java.lang.String id;
    private java.lang.String col1;
    private java.lang.String cl2;
    private java.lang.String col3;
    private java.lang.String col4;
    private java.lang.String col5;
    private java.lang.String col6;
    private java.lang.String col7;
    private java.lang.String col8;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudera.services.hbase.PWData.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudera.services.hbase.PWData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.col1)) {
        this.col1 = data().deepCopy(fields()[1].schema(), other.col1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cl2)) {
        this.cl2 = data().deepCopy(fields()[2].schema(), other.cl2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.col3)) {
        this.col3 = data().deepCopy(fields()[3].schema(), other.col3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.col4)) {
        this.col4 = data().deepCopy(fields()[4].schema(), other.col4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.col5)) {
        this.col5 = data().deepCopy(fields()[5].schema(), other.col5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.col6)) {
        this.col6 = data().deepCopy(fields()[6].schema(), other.col6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.col7)) {
        this.col7 = data().deepCopy(fields()[7].schema(), other.col7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.col8)) {
        this.col8 = data().deepCopy(fields()[8].schema(), other.col8);
        fieldSetFlags()[8] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PWData instance */
    private Builder(com.cloudera.services.hbase.PWData other) {
            super(com.cloudera.services.hbase.PWData.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.col1)) {
        this.col1 = data().deepCopy(fields()[1].schema(), other.col1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cl2)) {
        this.cl2 = data().deepCopy(fields()[2].schema(), other.cl2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.col3)) {
        this.col3 = data().deepCopy(fields()[3].schema(), other.col3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.col4)) {
        this.col4 = data().deepCopy(fields()[4].schema(), other.col4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.col5)) {
        this.col5 = data().deepCopy(fields()[5].schema(), other.col5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.col6)) {
        this.col6 = data().deepCopy(fields()[6].schema(), other.col6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.col7)) {
        this.col7 = data().deepCopy(fields()[7].schema(), other.col7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.col8)) {
        this.col8 = data().deepCopy(fields()[8].schema(), other.col8);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.String getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.cloudera.services.hbase.PWData.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.cloudera.services.hbase.PWData.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'col1' field */
    public java.lang.String getCol1() {
      return col1;
    }
    
    /** Sets the value of the 'col1' field */
    public com.cloudera.services.hbase.PWData.Builder setCol1(java.lang.String value) {
      validate(fields()[1], value);
      this.col1 = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'col1' field has been set */
    public boolean hasCol1() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'col1' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol1() {
      col1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'cl2' field */
    public java.lang.String getCl2() {
      return cl2;
    }
    
    /** Sets the value of the 'cl2' field */
    public com.cloudera.services.hbase.PWData.Builder setCl2(java.lang.String value) {
      validate(fields()[2], value);
      this.cl2 = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'cl2' field has been set */
    public boolean hasCl2() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'cl2' field */
    public com.cloudera.services.hbase.PWData.Builder clearCl2() {
      cl2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'col3' field */
    public java.lang.String getCol3() {
      return col3;
    }
    
    /** Sets the value of the 'col3' field */
    public com.cloudera.services.hbase.PWData.Builder setCol3(java.lang.String value) {
      validate(fields()[3], value);
      this.col3 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'col3' field has been set */
    public boolean hasCol3() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'col3' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol3() {
      col3 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'col4' field */
    public java.lang.String getCol4() {
      return col4;
    }
    
    /** Sets the value of the 'col4' field */
    public com.cloudera.services.hbase.PWData.Builder setCol4(java.lang.String value) {
      validate(fields()[4], value);
      this.col4 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'col4' field has been set */
    public boolean hasCol4() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'col4' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol4() {
      col4 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'col5' field */
    public java.lang.String getCol5() {
      return col5;
    }
    
    /** Sets the value of the 'col5' field */
    public com.cloudera.services.hbase.PWData.Builder setCol5(java.lang.String value) {
      validate(fields()[5], value);
      this.col5 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'col5' field has been set */
    public boolean hasCol5() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'col5' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol5() {
      col5 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'col6' field */
    public java.lang.String getCol6() {
      return col6;
    }
    
    /** Sets the value of the 'col6' field */
    public com.cloudera.services.hbase.PWData.Builder setCol6(java.lang.String value) {
      validate(fields()[6], value);
      this.col6 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'col6' field has been set */
    public boolean hasCol6() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'col6' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol6() {
      col6 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'col7' field */
    public java.lang.String getCol7() {
      return col7;
    }
    
    /** Sets the value of the 'col7' field */
    public com.cloudera.services.hbase.PWData.Builder setCol7(java.lang.String value) {
      validate(fields()[7], value);
      this.col7 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'col7' field has been set */
    public boolean hasCol7() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'col7' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol7() {
      col7 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'col8' field */
    public java.lang.String getCol8() {
      return col8;
    }
    
    /** Sets the value of the 'col8' field */
    public com.cloudera.services.hbase.PWData.Builder setCol8(java.lang.String value) {
      validate(fields()[8], value);
      this.col8 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'col8' field has been set */
    public boolean hasCol8() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'col8' field */
    public com.cloudera.services.hbase.PWData.Builder clearCol8() {
      col8 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public PWData build() {
      try {
        PWData record = new PWData();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.col1 = fieldSetFlags()[1] ? this.col1 : (java.lang.String) defaultValue(fields()[1]);
        record.cl2 = fieldSetFlags()[2] ? this.cl2 : (java.lang.String) defaultValue(fields()[2]);
        record.col3 = fieldSetFlags()[3] ? this.col3 : (java.lang.String) defaultValue(fields()[3]);
        record.col4 = fieldSetFlags()[4] ? this.col4 : (java.lang.String) defaultValue(fields()[4]);
        record.col5 = fieldSetFlags()[5] ? this.col5 : (java.lang.String) defaultValue(fields()[5]);
        record.col6 = fieldSetFlags()[6] ? this.col6 : (java.lang.String) defaultValue(fields()[6]);
        record.col7 = fieldSetFlags()[7] ? this.col7 : (java.lang.String) defaultValue(fields()[7]);
        record.col8 = fieldSetFlags()[8] ? this.col8 : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
